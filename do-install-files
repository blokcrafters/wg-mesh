#!/bin/bash

trim() {
  local var="$*"
  # remove leading whitespace characters
  var="${var#"${var%%[![:space:]]*}"}"
  # remove trailing whitespace characters
  var="${var%"${var##*[![:space:]]}"}"
  printf '%s' "$var"
}

mesh="$1"
if [ -z "${mesh}" ]; then
  printf 'A mesh name argument is expected as the first and only argument\n'
  exit 1
fi
if [ -n "$2" ]; then
  printf 'A mesh name argument is expected as the first and only argument\n'
  exit 1
fi

config_name="conf/wg-${mesh}.ini"
if [ ! -f "${config_name}" ]; then
  printf "The configuration file \'${config_name}\' could not be found.\n"
  exit 1
fi

iface=$(grep '^interface.*=' "${config_name}" | sed -e 's/^interface.*=//' -e 's/,/ /g')
iface=$(trim $iface)
if [ -z "$iface" ]; then
  printf "Could not find an interface name in \'${config_name}\'\n"
  exit 1
fi

nodes=$(grep '^nodes.*=' "${config_name}" | sed -e 's/^node.*=//' -e 's/,/ /g')
for node in $nodes; do
  node=$(trim $node)
  echo "$node - "
  inet4=$(grep '^inet4address.*=' "conf/$node.ini" | sed -e 's/^inet4address.*=//')
  inet4=$(trim $inet4)
  if [ -n "$inet4" ]; then
    chmod 0600 "etc-wireguard/$node/$iface.conf"
    rsync --archive --no-g --no-o --progress save_file "root@$inet4:/etc/wireguard/"
    ssh "root@$inet4" /bin/bash /etc/wireguard/save_file "/etc/wireguard/$iface.conf"
    ssh "root@$inet4" rm /etc/wireguard/save_file
    rsync --archive --no-g --no-o --progress "etc-wireguard/$node/$iface.conf" "root@$inet4:/etc/wireguard/"
  else
    inet6=$(grep '^inet6address.*=' "conf/$node.ini" | sed -e 's/^inet6address.*=//')
    inet6=$(trim $inet6)
    if [ -n "$inet6" ]; then
      chmod 0600 "etc-wireguard/$node/$iface.conf"
      rsync --archive --no-g --no-o --progress save_file "root@[$inet6]:/etc/wireguard/"
      ssh "root@$inet6" /bin/bash /etc/wireguard/save_file "/etc/wireguard/$iface.conf"
      ssh "root@$inet6" rm /etc/wireguard/save_file
      rsync --archive --no-g --no-o --progress "etc-wireguard/$node/$iface.conf" "root@[$inet6]:/etc/wireguard/"
    else
      printf 'Could not find a network address for node %s\n' "$node"
    fi
  fi
done

exit 0
